import{B as c,k as e}from"./index-eadb7dc2.js";class o extends Error{}o.prototype.name="InvalidTokenError";function l(t){return decodeURIComponent(atob(t).replace(/(.)/g,(r,a)=>{let s=a.charCodeAt(0).toString(16).toUpperCase();return s.length<2&&(s="0"+s),"%"+s}))}function u(t){let r=t.replace(/-/g,"+").replace(/_/g,"/");switch(r.length%4){case 0:break;case 2:r+="==";break;case 3:r+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return l(r)}catch{return atob(r)}}function d(t,r){if(typeof t!="string")throw new o("Invalid token specified: must be a string");r||(r={});const a=r.header===!0?0:1,s=t.split(".")[a];if(typeof s!="string")throw new o(`Invalid token specified: missing part #${a+1}`);let i;try{i=u(s)}catch(n){throw new o(`Invalid token specified: invalid base64 for part #${a+1} (${n.message})`)}try{return JSON.parse(i)}catch(n){throw new o(`Invalid token specified: invalid json for part #${a+1} (${n.message})`)}}c("user",{persist:{key:"user",storage:localStorage,paths:["userData"]},state:()=>({userData:{}}),getters:{rawUserData(){return d(this.userData.access_token)}},actions:{setUserData(t){this.userData=t}}});e();e();e();e();e();e();e();e(!1);e(!1);e(!0);e();e(1);e({});e({});e(!1);e(!0);e(!1);e({});const p=e({});function g(t){if(t)return t.toLocaleString("es-CO",{style:"currency",currency:"COP",minimumFractionDigits:0})}export{g as f,p as s};
